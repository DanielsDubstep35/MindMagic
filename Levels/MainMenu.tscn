[gd_scene load_steps=21 format=3 uid="uid://cxca1vhbypp33"]

[ext_resource type="Script" path="res://addons/godot-xr-tools/staging/scene_base.gd" id="1_ib4ig"]
[ext_resource type="PackedScene" uid="uid://cpk8due4k67mm" path="res://CreatedAssets/LevelBuilderAssets/level_3d_text.tscn" id="4_jhvrd"]
[ext_resource type="PackedScene" uid="uid://cfsaqg2yi7ufe" path="res://CreatedAssets/InteractableObjects/goal.tscn" id="5_xff0i"]
[ext_resource type="MeshLibrary" uid="uid://veaqdnoeraf0" path="res://UsedAssets/KayKit/dungeon_tiles.tres" id="7_1gw8j"]
[ext_resource type="PackedScene" uid="uid://dg2gohdntx5rv" path="res://players/vr_player.tscn" id="7_jiftr"]
[ext_resource type="PackedScene" uid="uid://clc5dre31iskm" path="res://addons/godot-xr-tools/xr/start_xr.tscn" id="8_5o14n"]

[sub_resource type="GDScript" id="GDScript_yftak"]
script/source = "extends Area3D

@export
var activationGoal = 1

@export
var activationCount = 1

@onready
var progressGrown = $FlowersGrown

@onready
var progressAmount = $FlowerAmount

@export_file(\"*.tscn\")
var target_scene : String

@export
var particles : GPUParticles3D

@export
var goalAudio : AudioStreamPlayer3D

#@onready
#var Activated_Bridge = $\"../ActivatedBridge\"

@onready
var goal = $\".\"

# Called when the node enters the scene tree for the first time.
func _ready():
	goal.monitorable = false
	goal.monitoring = false
	#progressGrown.modulate = Color.RED
	#progressAmount.modulate = Color.RED
	progressAmount.text = str(activationCount) + \" / \" + str(activationGoal)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if activationCount < 2:
		Progress()
	progressAmount.text = str(activationCount) + \" / \" + str(activationGoal)

func _on_body_entered(body):
	var scene_base : XRToolsSceneBase = XRTools.find_xr_ancestor(self, \"*\", \"XRToolsSceneBase\")
	if not scene_base:
		print(\"No scene_base.gd script Found\")
		return
		#
	## Start loading the target scene
	scene_base.load_scene(target_scene)

	#get_tree().change_scene_to_file(\"res://Levels/base_level.tscn\")

func AddProgress():
	activationCount += 1

func Progress():
	AddProgress()
	if activationCount >= activationGoal:
		goalOpen()
		#Activated_Bridge.hide()
		#Activated_Bridge.show()

func goalOpen():
	goal.monitorable = true
	goal.monitoring = true
	#progressGrown.modulate = Color.GREEN
	#progressAmount.modulate = Color.GREEN
	particles.emitting = true
	#goalAudio.playing = true

func _on_target_2_increment_goal_progress():
	Progress()
"

[sub_resource type="Gradient" id="Gradient_qs508"]
colors = PackedColorArray(0.856067, 0.856067, 0.856067, 1, 1, 1, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_oxug0"]
frequency = 0.0426
domain_warp_enabled = true

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_vbx18"]
seamless = true
color_ramp = SubResource("Gradient_qs508")
noise = SubResource("FastNoiseLite_oxug0")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_wxqpx"]
transparency = 1
shading_mode = 0
diffuse_mode = 3
specular_mode = 1
albedo_color = Color(0.258824, 0.839216, 0, 1)
albedo_texture = SubResource("NoiseTexture2D_vbx18")

[sub_resource type="GDScript" id="GDScript_us3i6"]
script/source = "extends Area3D

@export
var activationGoal = 1

@export
var activationCount = 1

@onready
var progressGrown = $FlowersGrown

@onready
var progressAmount = $FlowerAmount

@export_file(\"*.tscn\")
var target_scene : String

@export
var particles : GPUParticles3D

@export
var goalAudio : AudioStreamPlayer3D

#@onready
#var Activated_Bridge = $\"../ActivatedBridge\"

@onready
var goal = $\".\"

# Called when the node enters the scene tree for the first time.
func _ready():
	goal.monitorable = false
	goal.monitoring = false
	#progressGrown.modulate = Color.RED
	#progressAmount.modulate = Color.RED
	progressAmount.text = str(activationCount) + \" / \" + str(activationGoal)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if activationCount < 2:
		Progress()
	progressAmount.text = str(activationCount) + \" / \" + str(activationGoal)

func _on_body_entered(body):
	var scene_base : XRToolsSceneBase = XRTools.find_xr_ancestor(self, \"*\", \"XRToolsSceneBase\")
	if not scene_base:
		print(\"No scene_base.gd script Found\")
		return
		#
	## Start loading the target scene
	scene_base.load_scene(target_scene)

	#get_tree().change_scene_to_file(\"res://Levels/base_level.tscn\")

func AddProgress():
	activationCount += 1

func Progress():
	AddProgress()
	if activationCount >= activationGoal:
		goalOpen()
		#Activated_Bridge.hide()
		#Activated_Bridge.show()

func goalOpen():
	goal.monitorable = true
	goal.monitoring = true
	#progressGrown.modulate = Color.GREEN
	#progressAmount.modulate = Color.GREEN
	particles.emitting = true
	#goalAudio.playing = true

func _on_target_2_increment_goal_progress():
	Progress()
"

[sub_resource type="Gradient" id="Gradient_5afu1"]
colors = PackedColorArray(0.856067, 0.856067, 0.856067, 1, 1, 1, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_cma8t"]
frequency = 0.0426
domain_warp_enabled = true

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_7eqcw"]
seamless = true
color_ramp = SubResource("Gradient_5afu1")
noise = SubResource("FastNoiseLite_cma8t")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_33ito"]
transparency = 1
shading_mode = 0
diffuse_mode = 3
specular_mode = 1
albedo_color = Color(1, 1, 0, 1)
albedo_texture = SubResource("NoiseTexture2D_7eqcw")

[sub_resource type="GDScript" id="GDScript_xw51p"]
script/source = "extends Area3D

@export
var activationGoal = 1

@export
var activationCount = 1

@onready
var progressGrown = $FlowersGrown

@onready
var progressAmount = $FlowerAmount

@export_file(\"*.tscn\")
var target_scene : String

@export
var particles : GPUParticles3D

@export
var goalAudio : AudioStreamPlayer3D

#@onready
#var Activated_Bridge = $\"../ActivatedBridge\"

@onready
var goal = $\".\"

# Called when the node enters the scene tree for the first time.
func _ready():
	goal.monitorable = false
	goal.monitoring = false
	#progressGrown.modulate = Color.RED
	#progressAmount.modulate = Color.RED
	progressAmount.text = str(activationCount) + \" / \" + str(activationGoal)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if activationCount < 2:
		Progress()
	progressAmount.text = str(activationCount) + \" / \" + str(activationGoal)

func _on_body_entered(body):
	#var scene_base : XRToolsSceneBase = XRTools.find_xr_ancestor(self, \"*\", \"XRToolsSceneBase\")
	#if not scene_base:
		#print(\"No scene_base.gd script Found\")
		#return
		##
	### Start loading the target scene
	#scene_base.load_scene(target_scene)

	get_tree().quit()

	#get_tree().change_scene_to_file(\"res://Levels/base_level.tscn\")

func AddProgress():
	activationCount += 1

func Progress():
	AddProgress()
	if activationCount >= activationGoal:
		goalOpen()
		#Activated_Bridge.hide()
		#Activated_Bridge.show()

func goalOpen():
	goal.monitorable = true
	goal.monitoring = true
	#progressGrown.modulate = Color.GREEN
	#progressAmount.modulate = Color.GREEN
	particles.emitting = true
	#goalAudio.playing = true

func _on_target_2_increment_goal_progress():
	Progress()
"

[sub_resource type="SphereMesh" id="SphereMesh_wgvyv"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ly1pn"]
cull_mode = 1
diffuse_mode = 3
specular_mode = 1
albedo_color = Color(0, 1, 1, 1)
roughness = 0.0
emission_enabled = true
emission = Color(0, 1, 1, 1)
emission_energy_multiplier = 20.0
grow = true
grow_amount = 0.1

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_7g77a"]
next_pass = SubResource("StandardMaterial3D_ly1pn")
diffuse_mode = 3
specular_mode = 1
albedo_color = Color(1, 1, 0, 1)
emission_enabled = true
emission = Color(1, 0.0235294, 0, 1)
emission_energy_multiplier = 25.0

[node name="WorldRoot" type="Node3D"]
script = ExtResource("1_ib4ig")

[node name="LevelText" parent="." instance=ExtResource("4_jhvrd")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, -10)

[node name="Label3D" parent="LevelText" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.0488, 2.08165e-12)
modulate = Color(0.352941, 0.419608, 0.905882, 1)
text = "Mind Magic"

[node name="Description" parent="LevelText" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.7488, 0)
text = "Enter a portal to Select an option!"

[node name="StartGame" parent="." instance=ExtResource("5_xff0i")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -9)
script = SubResource("GDScript_yftak")
activationCount = 1
target_scene = "res://Levels/base_level.tscn"

[node name="MeshInstance3D" parent="StartGame" index="0"]
surface_material_override/0 = SubResource("StandardMaterial3D_wxqpx")

[node name="FlowersGrown" parent="StartGame" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.08165e-12, 1.2, 0)
modulate = Color(0.258824, 0.839216, 0, 1)
text = "Start Game
"

[node name="FlowerAmount" parent="StartGame" index="3"]
visible = false

[node name="Tutorial" parent="." instance=ExtResource("5_xff0i")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -6, 0, -9)
script = SubResource("GDScript_us3i6")
activationCount = 1
target_scene = "res://Levels/TestLevel.tscn"

[node name="MeshInstance3D" parent="Tutorial" index="0"]
surface_material_override/0 = SubResource("StandardMaterial3D_33ito")

[node name="FlowersGrown" parent="Tutorial" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.2, 0)
modulate = Color(1, 1, 0, 1)
text = "Tutorial"

[node name="FlowerAmount" parent="Tutorial" index="3"]
visible = false

[node name="QuitGame" parent="." instance=ExtResource("5_xff0i")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6, 0, -9)
script = SubResource("GDScript_xw51p")
activationCount = 1

[node name="FlowersGrown" parent="QuitGame" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.2, 0)
text = "Quit Game"

[node name="FlowerAmount" parent="QuitGame" index="3"]
visible = false

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
light_color = Color(0.823529, 0.823529, 0.823529, 1)
light_indirect_energy = 0.0
shadow_enabled = true

[node name="XROrigin3D" parent="." instance=ExtResource("7_jiftr")]

[node name="StartXR" parent="." instance=ExtResource("8_5o14n")]

[node name="GridMap" type="GridMap" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6, 0, -9)
mesh_library = ExtResource("7_1gw8j")
cell_size = Vector3(4, 4, 4)
data = {
"cells": PackedInt32Array(-4, 65535, 1441905, -4, 0, 1441905, -4, 1, 1441905, -4, 2, 1441905, -4, 3, 1441905, -3, 65535, 1441905, -3, 0, 1441905, -3, 1, 1441905, -3, 2, 1441905, -3, 3, 1441905, -2, 65535, 1441905, -2, 0, 1441905, -2, 1, 1441905, -2, 2, 1441905, -2, 3, 1441905, -1, 65535, 1441905, -1, 0, 1441905, -1, 1, 1441905, -1, 2, 1441905, -1, 3, 1441905, -65536, 65535, 1441905, -65536, 0, 1441905, -65536, 1, 1441905, -65536, 2, 1441905, -65536, 3, 1441905, -4, 65534, 113, -3, 65534, 113, -2, 65534, 113, -1, 65534, 113, -65536, 65534, 113)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="GridMap2" type="GridMap" parent="."]
mesh_library = ExtResource("7_1gw8j")
cell_size = Vector3(4, 4, 4)
data = {
"cells": PackedInt32Array(-2, 65535, 150, -65536, 65532, 188, -1, 65532, 184, -65535, 65532, 174, -2, 65532, 174, -3, 65533, 1048775, -3, 65534, 1441966, -3, 65535, 1441966, -3, 0, 1048775, -2, 1, 655534, -1, 1, 655534, -65536, 1, 655534, -65535, 1, 655534, -65534, 65533, 1048775, -65534, 65534, 1441992, -65534, 65535, 1441992, -65534, 0, 1441991, -65534, 1, 1441972, -3, 1, 655540, -3, 65532, 1048756, -65534, 65532, 180, 2, 65534, 1441992, 2, 65535, 1441992, 65534, 65532, 174, 65535, 65532, 174, 0, 65532, 174, 1, 65532, 174, 2, 65532, 180, 2, 65533, 1441966, 2, 0, 1441966, 65534, 1, 655534, 65535, 1, 655534, 0, 1, 655534, 1, 1, 655534, 65533, 65533, 1048750, 65533, 65534, 1048750, 65533, 65535, 1048750, 65533, 0, 1048750, 65533, 65532, 1048756, 65533, 1, 655540, 2, 1, 1441972, 131069, 65532, 1310833, 131069, 65533, 1310833, 131069, 65534, 1310833, 131069, 65535, 1310833, 131069, 0, 1310833, 131069, 1, 1310833, 131070, 65532, 1310833, 131070, 65533, 1310833, 131070, 65534, 1310833, 131070, 65535, 1310833, 131070, 0, 1310833, 131070, 1, 1310833, 131071, 65532, 1310833, 131071, 65533, 1310833, 131071, 65534, 1310833, 131071, 65535, 1310833, 131071, 0, 1310833, 131071, 1, 1310833, 65536, 65532, 1310833, 65536, 65533, 1310833, 65536, 65534, 1310833, 65536, 65535, 1310833, 65536, 0, 1310833, 65536, 1, 1310833, 65537, 65532, 1310833, 65537, 65533, 1310833, 65537, 65534, 1310833, 65537, 65535, 1310833, 65537, 0, 1310833, 65537, 1, 1310833, 65538, 65532, 1310833, 65538, 65533, 1310833, 65538, 65534, 1310833, 65538, 65535, 1310833, 65538, 0, 1310833, 65538, 1, 1310833)
}
metadata/_editor_floor_ = Vector3(0, 1, 0)

[node name="GridMap3" type="GridMap" parent="."]
mesh_library = ExtResource("7_1gw8j")
cell_size = Vector3(2, 1, 2)
cell_center_y = false
data = {
"cells": PackedInt32Array(-131069, 2, 45, -65541, 2, 655442, -65541, 1, 655438, -65540, 2, 655439, -65540, 1, 655437, -65540, 65534, 655432, -65540, 65535, 655432, -65539, 65534, 72, -65539, 65535, 72, -131068, 2, 1441837, -131068, 1, 1441836, -131068, 0, 1441835, -131071, 1, 1441843, -65539, 0, 1441848, -65540, 65533, 1441847, -65539, 65533, 1441851, -65540, 65532, 1441852, -65539, 2, 1441858, -65538, 2, 1441858, -131072, 2, 1441860, -65537, 0, 1441861)
}
metadata/_editor_floor_ = Vector3(0, -2, 0)

[node name="GridMap4" type="GridMap" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6, 0, -9)
mesh_library = ExtResource("7_1gw8j")
cell_center_x = false
cell_center_y = false
data = {
"cells": PackedInt32Array(-2, 65533, 189)
}
metadata/_editor_floor_ = Vector3(0, -1, 0)

[node name="SpotLight3D" type="SpotLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -0.258819, 0.965926, 0, -0.965926, -0.258819, 0, 5, -6)
light_color = Color(1, 0.768627, 0.458824, 1)
light_energy = 25.0
spot_range = 20.0
spot_angle = 67.5

[node name="MeshInstance3D" type="MeshInstance3D" parent="SpotLight3D"]
transform = Transform3D(1, 0, 0, 0, 1, -5.94334e-09, 0, 9.48348e-09, 1, 0, 0, 0)
mesh = SubResource("SphereMesh_wgvyv")
surface_material_override/0 = SubResource("StandardMaterial3D_7g77a")

[editable path="LevelText"]
[editable path="StartGame"]
[editable path="Tutorial"]
[editable path="QuitGame"]
[editable path="XROrigin3D"]
